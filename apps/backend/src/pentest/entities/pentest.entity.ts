import { Asset } from 'src/assets/entities/asset.entity';
import { Finding } from 'src/finding/entities/finding.entity';
import { Report } from 'src/reports/entities/report.entity';
import { PentestStatusEnum } from 'src/types';
import { User } from 'src/users/entities/user.entity';
import {
  Column,
  CreateDateColumn,
  Entity,
  JoinColumn,
  ManyToOne,
  OneToMany,
  PrimaryGeneratedColumn,
  UpdateDateColumn,
} from 'typeorm';

@Entity('pentest')
export class Pentest {
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column()
  name: string;

  @Column()
  description: string;

  @Column({ name: 'user_name' })
  userName: string;

  @Column({ name: 'user_password' })
  userPassword: string;

  @Column({ name: 'admin_name' })
  adminName: string;

  @Column({ name: 'admin_password' })
  adminPassword: string;

  @Column()
  note: string;

  @Column({ name: 'start_date' })
  startDate: string;

  @Column({ name: 'end_date' })
  endDate: string;

  @Column({
    default: PentestStatusEnum.SETUP,
    enum: PentestStatusEnum,
  })
  status: PentestStatusEnum;

  @OneToMany(() => Asset, (asset) => asset.pentest, { cascade: true })
  assets: Asset[];

  @ManyToOne(() => User, (user) => user.pentest)
  user: User;

  @ManyToOne(() => Report, (report) => report.pentest)
  report: Report;

  @ManyToOne(() => User, (user) => user.assignedPentests)
  @JoinColumn({ name: 'assigned_by' })
  assignedBy?: User;

  @OneToMany(() => Finding, (finding) => finding.pentest)
  finding?: Finding;

  @CreateDateColumn({ type: 'timestamptz', name: 'created_at' })
  createdAt: string;

  @UpdateDateColumn({ type: 'timestamptz', name: 'updated_at' })
  updatedAt: string;
}
