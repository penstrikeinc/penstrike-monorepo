import {
  Controller,
  Get,
  Post,
  Body,
  Param,
  Delete,
  UseGuards,
  Patch,
} from '@nestjs/common';
import { PentestService } from './pentest.service';
import { CreatePentestDto } from './dto/create-pentest.dto';
import { JwtAuthGuard } from 'src/auth/guards/jwt.guard';
import { GetUser } from 'src/auth/decorator/user';
import { IJwtPayload } from 'src/types';

@UseGuards(JwtAuthGuard)
@Controller('pentest')
export class PentestController {
  constructor(private readonly pentestService: PentestService) {}

  @Post()
  create(
    @Body() createPentestDto: CreatePentestDto,
    @GetUser() user: IJwtPayload,
  ) {
    return this.pentestService.create({ createPentestDto, userId: user.id });
  }

  @Get()
  findAll() {
    return this.pentestService.findAll();
  }

  @Get(':id')
  findOne(@Param('id') id: string) {
    return this.pentestService.findOne(id);
  }

  @Patch('assign/:id')
  assignedPentester(
    @Param('id') id: string,
    @Body() { assignedId }: { assignedId: string },
  ) {
    return this.pentestService.assignedPentester(id, assignedId);
  }

  @Delete(':id')
  remove(@Param('id') id: string) {
    return this.pentestService.remove(+id);
  }
}
