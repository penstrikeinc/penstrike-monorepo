import { Injectable } from '@nestjs/common';
import { CreatePentestDto } from './dto/create-pentest.dto';
import { UpdatePentestDto } from './dto/update-pentest.dto';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { Pentest } from './entities/pentest.entity';

@Injectable()
export class PentestService {
  constructor(
    @InjectRepository(Pentest)
    private readonly pentestService: Repository<Pentest>,
  ) {}

  async create({
    createPentestDto,
    userId,
  }: {
    createPentestDto: CreatePentestDto;
    userId: string;
  }): Promise<Pentest> {
    const payload = { ...createPentestDto, user: { id: userId } };

    const newPentest = this.pentestService.create(payload);
    return await this.pentestService.save(newPentest);
  }

  async findAll(): Promise<Pentest[]> {
    return await this.pentestService.find();
  }

  async findOne(id: string) {
    return await this.pentestService.findOne({
      where: { id, assets: true },
      relations: ['user', 'assets'],
      select: {
        assets: true,
        user: { id: true, firstName: true, lastName: true },
      },
    });
  }

  update(id: number, updatePentestDto: UpdatePentestDto) {
    return `This action updates a #${id} pentest`;
  }

  remove(id: number) {
    return `This action removes a #${id} pentest`;
  }
}
