import { Injectable } from '@nestjs/common';
import { CreatePentestDto } from './dto/create-pentest.dto';
import { UpdatePentestDto } from './dto/update-pentest.dto';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { Pentest } from './entities/pentest.entity';

@Injectable()
export class PentestService {
  constructor(
    @InjectRepository(Pentest)
    private readonly assetService: Repository<Pentest>,
  ) {}

  async create({
    createPentestDto,
    userId,
  }: {
    createPentestDto: CreatePentestDto;
    userId: string;
  }): Promise<Pentest> {
    const payload = { ...createPentestDto, user: { id: userId } };

    const newPentest = this.assetService.create(payload);
    return await this.assetService.save(newPentest);
  }

  async findAll(): Promise<Pentest[]> {
    return await this.assetService.find();
  }

  findOne(id: number) {
    return `This action returns a #${id} pentest`;
  }

  update(id: number, updatePentestDto: UpdatePentestDto) {
    return `This action updates a #${id} pentest`;
  }

  remove(id: number) {
    return `This action removes a #${id} pentest`;
  }
}
