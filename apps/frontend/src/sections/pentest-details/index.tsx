'use client';

import { alpha, useTheme } from '@mui/material/styles';
import Box from '@mui/material/Box';
import Container from '@mui/material/Container';

import { Grid } from '@mui/material';
import { useCallback, useMemo } from 'react';
import { useSettingsContext } from 'src/components/settings';
import { CustomBreadcrumbs, NotFoundCard, PentestDetails } from 'src/components';
import { useGetPentestInfoQuery, useUpdatePentestAssignMutation } from 'src/services';
import { paths } from 'src/routes/paths';
import { IPentest, IUser } from 'src/types';
import Scrollbar from 'src/components/scrollbar';
import { UserDropdown } from 'src/components/user-dropdown';

interface IpentestDetailsProps {
  id: string;
}

export function PentestDetailsSection({ id }: IpentestDetailsProps) {
  const settings = useSettingsContext();
  const { data: pentestResponse } = useGetPentestInfoQuery(id);
  const { mutateAsync: assignPentest } = useUpdatePentestAssignMutation();

  const theme = useTheme();

  const pentest: IPentest | undefined = useMemo(
    () => pentestResponse?.data,
    [pentestResponse?.data]
  );

  const handleUserChange = useCallback(
    (user: IUser | null) => {
      if (user) {
        assignPentest({ pentestId: id, assignedId: user.id });
      }
    },
    [assignPentest, id]
  );

  if (!pentest) {
    return null;
  }

  const { createdAt, updatedAt, id: pentestId, assets, ...pentestDetails } = pentest;

  return (
    <Container maxWidth={settings.themeStretch ? false : 'xl'}>
      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
        <CustomBreadcrumbs
          heading="Pentest Details"
          links={[
            { name: 'Pentest', href: paths.dashboard.pentest },
            { name: 'Pentest Details', href: `${paths.dashboard.pentest}/${id}` },
          ]}
        />
        <Grid sx={{ width: 200 }}>
          <UserDropdown
            userId={pentest.assignedBy?.id}
            onChange={handleUserChange}
            label="Assign Pentester"
          />
        </Grid>
      </Box>
      {pentest ? (
        <Box
          sx={{
            mt: 5,
            p: 2,
            borderRadius: 2,
            bgcolor: alpha(theme.palette.grey[500], 0.04),
            border: `dashed 1px ${theme.palette.divider}`,
          }}
        >
          <Scrollbar sx={{ height: 'calc(100dvh - 300px)' }}>
            <PentestDetails pentest={pentestDetails} assets={assets} />
          </Scrollbar>
        </Box>
      ) : (
        <NotFoundCard entity="Pentest" />
      )}
    </Container>
  );
}
