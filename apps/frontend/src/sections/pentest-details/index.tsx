'use client';

// @mui
import { alpha, useTheme } from '@mui/material/styles';
import Box from '@mui/material/Box';
import Container from '@mui/material/Container';

// components
import { Button } from '@mui/material';
import { useCallback, useMemo, useState } from 'react';
import { useSettingsContext } from 'src/components/settings';
import {
  AddEditAssetsDialog,
  CustomBreadcrumbs,
  NotFoundCard,
  PentestDetails,
} from 'src/components';
import { useGetPentestInfoQuery } from 'src/services';
import { IAsset } from 'src/types/asset';
import { paths } from 'src/routes/paths';
import { MdOutlineAssignmentInd } from 'react-icons/md';
import { IPentest } from 'src/types';

interface IpentestDetailsProps {
  id: string;
}

export function PentestDetailsSection({ id }: IpentestDetailsProps) {
  const settings = useSettingsContext();
  const [openDialog, setOpenDialog] = useState(false);
  const [assetsDialogContext, setAssetsDialogContext] = useState<IAsset | null>(null);
  const { data: pentestResponse } = useGetPentestInfoQuery(id);
  const theme = useTheme();

  const pentest: IPentest = useMemo(
    () => pentestResponse?.data ?? ({} as IPentest),
    [pentestResponse?.data]
  );

  console.log({ pentest, id });

  const { createdAt, updatedAt, id: pentestId, assets, ...pentestDetails } = pentest || {};

  const addAssetsDialogOpenHandler = useCallback(() => {
    setOpenDialog(true);
  }, []);

  const onAssetsDialogCloseHandler = useCallback(() => {
    setOpenDialog(false);
    setAssetsDialogContext(null);
  }, []);

  return (
    <Container maxWidth={settings.themeStretch ? false : 'xl'}>
      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
        <CustomBreadcrumbs
          heading="Pentest Details"
          links={[
            { name: 'Pentest', href: paths.dashboard.pentest },
            { name: 'Pentest Details', href: `${paths.dashboard.pentest}/${id}` },
          ]}
        />
        <Button
          startIcon={<MdOutlineAssignmentInd size={18} />}
          variant="contained"
          color="primary"
          size="large"
          onClick={() => addAssetsDialogOpenHandler()}
        >
          Assign Pentester
        </Button>
      </Box>
      {pentest ? (
        <Box
          sx={{
            mt: 5,
            p: 2,
            borderRadius: 2,
            bgcolor: alpha(theme.palette.grey[500], 0.04),
            border: `dashed 1px ${theme.palette.divider}`,
          }}
        >
          <PentestDetails pentest={pentestDetails} assets={assets} />
        </Box>
      ) : (
        <NotFoundCard entity="Pentest" />
      )}
      <AddEditAssetsDialog
        open={openDialog}
        context={assetsDialogContext}
        onClose={onAssetsDialogCloseHandler}
      />
    </Container>
  );
}
