'use client';

// @mui
import { alpha, useTheme } from '@mui/material/styles';
import Box from '@mui/material/Box';
import Container from '@mui/material/Container';
// components
import { Button, InputAdornment, TextField, Typography } from '@mui/material';
import { FaHandPaper, FaPlus, FaSearch } from 'react-icons/fa';
import { CgFileAdd } from 'react-icons/cg';
import { useCallback, useMemo, useState } from 'react';
import { useSettingsContext } from 'src/components/settings';

import { useMockedUser } from 'src/hooks/use-mocked-user';
import { pentestDefaultValues, TPentest } from 'src/schemas';
import { AddEditPentestDialog } from 'src/components/dialogs/add-edit-pentest';
import { useGetAllPentestQuery } from 'src/services';
import { PentessTable } from 'src/components';
import { useRouter } from 'next/navigation';
import { paths } from 'src/routes/paths';

export function Pentest() {
  const [pentestDialogContext, setPentestDialogContext] = useState<TPentest | null>(null);
  const settings = useSettingsContext();
  const { user } = useMockedUser();
  const theme = useTheme();
  const router = useRouter();

  const { data: pentestRes } = useGetAllPentestQuery();

  const pentests = useMemo(() => pentestRes?.data.items || [], [pentestRes?.data.items]);
  const isPentest = useMemo(() => !!pentests, [pentests]);

  const addPentestDialogOpenHandler = useCallback(async (context: TPentest | null) => {
    setPentestDialogContext(context ?? pentestDefaultValues);
  }, []);

  const addEditPentestCloseHandler = useCallback(() => {
    setPentestDialogContext(null);
  }, []);

  const onPentestShowHandler = useCallback(
    (pentestId: string) => {
      const path = `${paths.dashboard.pentest}/${pentestId}`;
      router.push(path);
    },
    [router]
  );

  return (
    <Container maxWidth={settings.themeStretch ? false : 'xl'}>
      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
        <Typography variant="h4" color="text.secondary">
          Pentest
        </Typography>

        <Box>
          <Button
            startIcon={<FaPlus size={18} />}
            variant="contained"
            color="primary"
            size="large"
            onClick={() => addPentestDialogOpenHandler(null)}
          >
            Create New Pentest
          </Button>
        </Box>
      </Box>
      {isPentest ? (
        <Box
          sx={{
            mt: 5,
            p: 2,
            borderRadius: 2,
            bgcolor: alpha(theme.palette.grey[500], 0.04),
            border: `dashed 1px ${theme.palette.divider}`,
          }}
        >
          <Box
            sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}
          >
            <Typography variant="h6">All Pentest</Typography>
            <TextField
              InputProps={{
                startAdornment: (
                  <InputAdornment position="start">
                    <FaSearch size={18} />
                  </InputAdornment>
                ),
              }}
              variant="outlined"
              color="primary"
              size="medium"
              placeholder="Search reports or vulnerabilities"
            />
          </Box>

          <PentessTable pentests={pentests} onShow={onPentestShowHandler} />
        </Box>
      ) : (
        <Box>
          <Box
            sx={{
              mt: 5,
            }}
          >
            <Typography variant="h4" mb={3}>
              <FaHandPaper /> Welcome,{' '}
              <span style={{ color: theme.palette.primary.main }}>{user?.displayName}</span>
            </Typography>
            <Typography variant="h6">Start first pentest. </Typography>
            <Typography variant="body2" color="text.secondary">
              Start your first pentest journey with us. We are here to secure your business.
            </Typography>
          </Box>
          <Box>
            <Button
              sx={{
                p: 0,
                mt: 5,
                width: 1,
                height: 230,
                borderRadius: 2,
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                bgcolor: alpha(theme.palette.grey[500], 0.04),
                border: `dashed 1px ${theme.palette.primary.main}`,
              }}
              onClick={() => addPentestDialogOpenHandler(null)}
            >
              <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
                <Box
                  sx={{
                    mb: 2,
                    width: 100,
                    height: 100,
                    borderRadius: 50,
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    bgcolor: alpha(theme.palette.primary.main, 0.04),
                    border: `dashed 1px ${theme.palette.primary.main}`,
                  }}
                >
                  <CgFileAdd size={50} color={theme.palette.primary.main} />
                </Box>
                <Typography variant="h6" color={theme.palette.primary.main}>
                  <FaPlus size={14} style={{ marginRight: 3 }} />
                  Create New Pentest
                </Typography>
              </Box>
            </Button>
          </Box>
        </Box>
      )}

      <AddEditPentestDialog
        open={Boolean(pentestDialogContext)}
        context={pentestDialogContext}
        onClose={addEditPentestCloseHandler}
      />
    </Container>
  );
}
